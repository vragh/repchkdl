% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/repchkdl.R
\name{repchkdl}
\alias{repchkdl}
\title{Continually Check for and Download Newly Added Files from Given URL Matching Optional Regex}
\usage{
repchkdl(
  inpurl = NA,
  inpwd = getwd(),
  inpregex = NA,
  autoscan = "y",
  autodl = "y",
  inpwait = 2,
  enabledl = "y",
  scanlim = NA,
  firstrundl = "y"
)
}
\arguments{
\item{inpurl}{(character) URL that should be scanned}

\item{inpwd}{(character; optional) directory where downloaded files should be saved (default location supplied by getwd())}

\item{inpregex}{(character; optional) regular expression (default NA) to indicate what file additions at the URL should be considered for download}

\item{autoscan}{(y/n) set to "y" (default) to have repchkdl rescan automatically}

\item{autodl}{(y/n) set to "y" (default) to have repchkdl download new files automatically}

\item{inpwait}{(double) time in seconds (default 2 seconds) after which repchkdl should poll the URL again}

\item{enabledl}{(y/n) if set to "n" (default "y") repchkdl will SIMULATE downloads (i.e., nothing will be downloaded even if the terminal prints "Downloading file: ")}

\item{scanlim}{(integer; optional) sets the number of times repchkdl should run before exiting}

\item{firstrundl}{(y/n) if set to "y" (default) repchkdl will automatically download all matching/available files upon first invocation. Setting to "n" will prompt the user. The user can select to skip downloading the files upon first run; this is useful, for example, if the current set of files at the URL have been downloaded already, and repchkdl is only needed to check for additions hereafter.}
}
\value{
a vector containing the names of all files that have been downloaded
}
\description{
This function downloads data from the given URL and keeps checking for new
files at the URL thereafter. Should new files become available, the function
offers to download them. A regular expression can be supplied to the function
to indicate what should be considered valid "new" files; e.g, "txt" would
check and alert the user/download the files if and only if a file matching
the regex "txt" becomes available at the URL. Note: repchkdl will have to be
forcibly exited if autoscan = "y" is set, as there is no way to break the recursion
otherwise. This CAN cause the latest set of files to not be downloaded!
}
\examples{
\dontrun{test <- repchkdl(inpurl = "ftp://speedtest.tele2.net/upload/",
inpregex = ".txt", autoscan = "y", autodl = "y",
enabledl = "n", scanlim = 4, inpwait = 2)}
}
